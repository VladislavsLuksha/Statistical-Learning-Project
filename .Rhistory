library(factoextra)
library(tidyverse)
library(corrplot)
library(factoextra)
library("reshape2")
library("dendextend")
library(solitude)
library(tidyr)
library(car)
library(skimr)
library(readr)
library(plyr)
library(dplyr)
library(ggplot2)
library(caret)
library(grid)
library(gridExtra)
library("epitools")
library(pROC)
library(MASS)
library(class)
library(gmodels)
library(randomForest)
library(stringr)
library(FactoMineR)
df <- read_csv("https://github.com/VladislavsLuksha/Statistical-Learning-Project/blob/main/formula1.csv")
df <- as.data.frame(df)
colnames(df)
sapply(df, function(x) sum(is.na(x)))
###################### BASIC DESCRIPTIVE ANALYSIS ############################
#relabling levels for favorite circuit variable
df$fav_circuit <- as.factor(ifelse(df$fav_circuit %in% c("Suzuka Circuit","Marina Bay","Albert Park","Adelaide Street Circuit, Australia"), 'APAC',
ifelse(df$fav_circuit %in% c("Autódromo José Carlos Pace" ,"Interlagos"    ,"Autodromo Hermanos Rodriguez"), 'LATAM',
ifelse(df$fav_circuit %in% c("Circuit of The Americas","Miami International Autodrome" ,"Circuit Gilles Villeneuve" ,"24"), 'NORTH_AMERICA',
ifelse(df$fav_circuit %in% c("Baku City Circuit" ,"as Marina","Jeddah Corniche Circuit","Bahrain International Circuit","Kyalami, South Africa"), "MEAST_AFR", "EUROPE")))))
#c("Circuit Zandvoort" ,"Circuit de Monaco","Autodromo Nazionale di Monza","Circuit de Spa-Francorchamps","Red Bull Ring","Paul Ricard","Imola")
#'Europe'
#'
unique(df$team)
df <- read_csv("https://github.com/VladislavsLuksha/Statistical-Learning-Project/blob/main/formula1.csv")
df <- as.data.frame(df)
colnames(df)
View(df)
df <- as.data.frame(df)
colnames(df)
df <- read_csv("https://raw.githubusercontent.com/VladislavsLuksha/Statistical-Learning-Project/main/formula1.csv")
df <- as.data.frame(df)
colnames(df)
sapply(df, function(x) sum(is.na(x)))
###################### BASIC DESCRIPTIVE ANALYSIS ############################
#relabling levels for favorite circuit variable
df$fav_circuit <- as.factor(ifelse(df$fav_circuit %in% c("Suzuka Circuit","Marina Bay","Albert Park","Adelaide Street Circuit, Australia"), 'APAC',
ifelse(df$fav_circuit %in% c("Autódromo José Carlos Pace" ,"Interlagos"    ,"Autodromo Hermanos Rodriguez"), 'LATAM',
ifelse(df$fav_circuit %in% c("Circuit of The Americas","Miami International Autodrome" ,"Circuit Gilles Villeneuve" ,"24"), 'NORTH_AMERICA',
ifelse(df$fav_circuit %in% c("Baku City Circuit" ,"as Marina","Jeddah Corniche Circuit","Bahrain International Circuit","Kyalami, South Africa"), "MEAST_AFR", "EUROPE")))))
#c("Circuit Zandvoort" ,"Circuit de Monaco","Autodromo Nazionale di Monza","Circuit de Spa-Francorchamps","Red Bull Ring","Paul Ricard","Imola")
#'Europe'
#'
unique(df$team)
unique(df$country)
unique(df$fav_circuit)
df$team <- as.factor(df$team)
#summary statistics
df[, -c(1,2,3,4,12)] <- sapply(df[, -c(1,2,3,4,12)],as.numeric)
Mu <- colMeans(df[, -c(1, 2,3,4,12)])
sigma <- apply(df[, -c(1, 2,3,4,12)], 2, sd)
descriptive<-round(cbind(Mu, sigma),2)
descriptive
dim(df)
skim(df)
#correlation plot
M<-cor(df[, -c(1, 2,3,4,12)]) #without categorical variables
M
corrplot(M, method = 'square', tl.col="black", order = "AOE")
plot(x=df$years_in_f1,y=df$races)
########################## PCA #################################
#computing PCA
res.pca <- prcomp(df[, -c(1,2,3,4,12)],scale.=TRUE)
# New correlation matrix
pca_df <- data.frame(res.pca$x)
M_pca<-cor(pca_df)
corrplot(M_pca, method = 'circle', tl.col="black", order = "AOE")
# Eigenvalues
eig.val <- get_eigenvalue(res.pca)
eig.val
# Results for Variables
res.var <- get_pca_var(res.pca)
res.var$coord          # Coordinates
res.var$contrib        # Contributions to the PCs
res.var$cos2           # Quality of representation
# Loadings
loadings <- res.pca$rotation
# Results for Formula 1 players
res.ind <- get_pca_ind(res.pca)
res.ind$coord          # Coordinates
res.ind$contrib        # Contributions to the PCs
res.ind$cos2           # Quality of representation
fviz_pca_ind(res.pca,
col.ind = 'cos2', # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
max.overlaps =300 # Avoid text overlapping
)
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("black", "#E7B800", "red"),
repel = TRUE,
max.overlaps =300 # Avoid text overlapping
)
fviz_pca_biplot(res.pca, repel = TRUE,
col.var = "red", # Variables color
col.ind = "lightblue"  # Individuals color
)
fviz_pca_ind(res.pca,
col.ind = df$team,
#addEllipses = TRUE, # Concentration ellipses
#ellipse.type = "confidence",
legend.title = "team",
repel = TRUE
)
# K-Means
set.seed(4321)
df_kmeans<- as.data.frame(scale(df[, -c(1,2,3,4,12)]))
#optimal number of clusters 'ELBOW'
fviz_nbclust(df_kmeans, kmeans, nstart =5, method = "wss", linecolor='red') + theme_minimal()+
geom_vline(xintercept = 4, linetype = 2)
#optimal number of clusters 'SILHOUETTE'
fviz_nbclust(df_kmeans, kmeans, nstart = 5, method = "silhouette", linecolor='red') + theme_minimal()
kmeans_fit <- kmeans(df_kmeans, 4, nstart = 5)
# plot the clusters
fviz_cluster(kmeans_fit, data = df_kmeans,
palette = c("#00AFBB", "#E7B800","#FC4E07", '#33CC33'),
geom = c("point"),ellipse.type = "euclid",
ggtheme = theme_minimal())
kmeans_table <- data.frame(kmeans_fit$size, kmeans_fit$centers)
kmeans_df <- data.frame(Cluster = kmeans_fit$cluster, df)
#plotting association with races, years, annual salary and number of podiums
kmeans_df$Cluster <- as.factor(kmeans_df$Cluster)
p1 <- ggplot(kmeans_df, aes(x=races, fill=Cluster)) +
geom_bar(position="fill", alpha = 0.6) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c("#00AFBB", "#E7B800", "#FC4E07", '#33CC33'))
p2 <- ggplot(kmeans_df, aes(x=years_in_f1, fill=Cluster)) +
geom_bar(position="fill", alpha = 0.6) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c("#00AFBB", "#E7B800", "#FC4E07", '#33CC33'))
